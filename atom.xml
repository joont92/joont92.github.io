<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>joont blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://joont92.github.io/"/>
  <updated>2017-10-28T13:32:44.350Z</updated>
  <id>https://joont92.github.io/</id>
  
  <author>
    <name>joont</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>사용자/그룹 관리</title>
    <link href="https://joont92.github.io/2017/10/28/linux/%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B7%B8%EB%A3%B9-%EA%B4%80%EB%A6%AC/"/>
    <id>https://joont92.github.io/2017/10/28/linux/사용자-그룹-관리/</id>
    <published>2017-10-28T13:32:44.350Z</published>
    <updated>2017-10-28T13:32:44.350Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="linux" scheme="https://joont92.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>프로세스</title>
    <link href="https://joont92.github.io/2017/10/28/linux/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4/"/>
    <id>https://joont92.github.io/2017/10/28/linux/프로세스/</id>
    <published>2017-10-28T13:32:36.182Z</published>
    <updated>2017-10-28T13:32:36.182Z</updated>
    
    <content type="html"><![CDATA[<p>작업 : 작성한 프로그램 + 프로그램 실행에 필요한 데이터<br>작업이 커널에 등록되어 커널의 관리하에 있게 되면 이를 프로세스라고 부른다.<br>일반적으로 실행중인 프로그램을 말한다.</p><p>종속된 자식 프로세스는 부모 프로세스의 환경을 물려받으나 역은 성립하지 않는다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;작업 : 작성한 프로그램 + 프로그램 실행에 필요한 데이터&lt;br&gt;작업이 커널에 등록되어 커널의 관리하에 있게 되면 이를 프로세스라고 부른다.&lt;br&gt;일반적으로 실행중인 프로그램을 말한다.&lt;/p&gt;
&lt;p&gt;종속된 자식 프로세스는 부모 프로세스의 환경을 
      
    
    </summary>
    
      <category term="linux" scheme="https://joont92.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>apt 명렁어</title>
    <link href="https://joont92.github.io/2017/10/28/linux/apt-%EB%AA%85%EB%A0%81%EC%96%B4/"/>
    <id>https://joont92.github.io/2017/10/28/linux/apt-명렁어/</id>
    <published>2017-10-28T13:32:32.126Z</published>
    <updated>2017-10-28T13:32:32.126Z</updated>
    
    <content type="html"><![CDATA[<h1 id="패키지란"><a href="#패키지란" class="headerlink" title="패키지란"></a>패키지란</h1><p>커널 및 라이브러리 버전의 배포판 환경에 맞추어 빌드한 실행파일을 압축한 것.</p><h1 id="apt란"><a href="#apt란" class="headerlink" title="apt란"></a>apt란</h1><p>우분투에서 쓰이는 데비안 계열의 패키지를 관리하는데 쓰이는 도구이다.</p><p>저장소 리스트 : /etc/apt/sources.list</p><h3 id="패키지-리스트-업데이트"><a href="#패키지-리스트-업데이트" class="headerlink" title="패키지 리스트 업데이트"></a>패키지 리스트 업데이트</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get update</div></pre></td></tr></table></figure><p>> 실제 패키지를 업그레이드 하는 것이 아니라 사용가능한 패키지 리스트의 정보를 업데이트</p><h3 id="패키지-업데이트"><a href="#패키지-업데이트" class="headerlink" title="패키지 업데이트"></a>패키지 업데이트</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get upgrade</div></pre></td></tr></table></figure><p>> 실제 설치되어 있는 패키지들을 최신 버전으로 업그레이드</p><h3 id="패키지-설치"><a href="#패키지-설치" class="headerlink" title="패키지 설치"></a>패키지 설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install [패키지명]</div></pre></td></tr></table></figure><h3 id="패키지-재설치"><a href="#패키지-재설치" class="headerlink" title="패키지 재설치"></a>패키지 재설치</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get --reinstall install [패키지명]</div></pre></td></tr></table></figure><h3 id="패키지-삭제"><a href="#패키지-삭제" class="headerlink" title="패키지 삭제"></a>패키지 삭제</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get remove [패키지명] # 설정파일은 지우지 않음</div><div class="line">apt-get purge [패키지명] # 설정파일까지 지움</div></pre></td></tr></table></figure><h3 id="패키지-검색"><a href="#패키지-검색" class="headerlink" title="패키지 검색"></a>패키지 검색</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-cache search [패키지명]</div></pre></td></tr></table></figure><h3 id="패키지-정보"><a href="#패키지-정보" class="headerlink" title="패키지 정보"></a>패키지 정보</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-cache show [패키지명]</div></pre></td></tr></table></figure><p>apt 명령어를 이용해 설치한 패키지는 \/var\/cache\/apt\/archives 에 설치된다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;패키지란&quot;&gt;&lt;a href=&quot;#패키지란&quot; class=&quot;headerlink&quot; title=&quot;패키지란&quot;&gt;&lt;/a&gt;패키지란&lt;/h1&gt;&lt;p&gt;커널 및 라이브러리 버전의 배포판 환경에 맞추어 빌드한 실행파일을 압축한 것.&lt;/p&gt;
&lt;h1 id=&quot;apt란&quot;&gt;
      
    
    </summary>
    
      <category term="linux" scheme="https://joont92.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>bash_profile과 bashrc</title>
    <link href="https://joont92.github.io/2017/10/28/linux/bash-profile%EA%B3%BC-bashrc/"/>
    <id>https://joont92.github.io/2017/10/28/linux/bash-profile과-bashrc/</id>
    <published>2017-10-28T13:32:28.022Z</published>
    <updated>2017-10-28T13:32:28.022Z</updated>
    
    <content type="html"><![CDATA[<p>리눅스에서 alias를 수정하거나 PATH를 변경할 떄 접하게 되는 대표적인 4가지의 파일들..</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/profile, /etc/bashrc, ~\.bash_profile, ~\.bash_rc</div></pre></td></tr></table></figure><p>각각의 파일에 대해 간단하게 알아보겠다.</p><p>일단 이에 대해 알기전에 <strong>Login Shell</strong>과 <strong>Non-Login Shell</strong>의 차이에 대해 알아야 한다.</p><h5 id="Login-Shell"><a href="#Login-Shell" class="headerlink" title="Login Shell"></a>Login Shell</h5><p>Shell을 실행할 때 로그인이 필요한 경우를 말한다.<br>ssh로 접속하거나, su 명령어로 다른계정을 들어갈 때 등이 해당된다.</p><blockquote><p>\/etc\/profile, ~\/.bash_profile 파일이 이 Shell이 뜰 때 실행되는 파일이다.</p></blockquote><h5 id="Non-Login-Shell"><a href="#Non-Login-Shell" class="headerlink" title="Non-Login Shell"></a>Non-Login Shell</h5><p>Shell을 실행할 떄 로그인이 필요하지 않은 경우를 말한다.<br>즉 Shell이 실행되는 모든 상황을 의미하게 됩니다.<br>GUI에서 터미널을 띄울때나, bash 명령어로 다시 bash를 실행하는 경우 등이 해당된다.</p><blockquote><p>\/etc\/bashrc, ~\/.bashrc 파일이 이 Shell이 뜰 때 실행되는 파일이다.</p></blockquote><p>Login Shell은 Non-Login Shell을 포함합니다.<br>Login Shell이 실행될 때 profile과 bashrc 파일이 모두 실행되게 되고,<br>Non-Login Shell이 실행될 때 bashrc 파일만 실행되게 됩니다.</p><h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><p>\/etc\/profile 파일의 경우 전역적인 파일로 모든 사용자가 로그인 시 실행되며,<br>~\/.bash_profile 파일의 경우 지역적인 파일로 해당하는 사용자가 로그인 시만 실행된다.<br>또한 \/etc\/profile의 경우 어떠한 shell이든 상관없지만, ~\/.bash_profile의 경우 bash shell일 경우에만 해당된다.</p><h3 id="bashrc"><a href="#bashrc" class="headerlink" title="bashrc"></a>bashrc</h3><p>profile과 달리 Login 과정이 없으므로 shell을 실행시키는 사용자로 구분한다.<br>\/etc\/bashrc의 경우 모든 사용자가 shell을 실행시킬 때 마다 실행되며,<br>~\/.bashrc의 경우 해당하는 사용자가 shell 실행시킬 때 실행된다.</p><blockquote><p>profile의 경우 대부분 환경 변수같은 것을 명시하고 bashrc의 경우 alias 같은 것을 명시한다..(?)</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;리눅스에서 alias를 수정하거나 PATH를 변경할 떄 접하게 되는 대표적인 4가지의 파일들..&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;
      
    
    </summary>
    
      <category term="linux" scheme="https://joont92.github.io/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://joont92.github.io/2017/10/28/test/hello-world/"/>
    <id>https://joont92.github.io/2017/10/28/test/hello-world/</id>
    <published>2017-10-28T13:27:49.157Z</published>
    <updated>2017-10-28T13:27:49.161Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="test" scheme="https://joont92.github.io/categories/test/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo와 github pages로 블로그 만들기</title>
    <link href="https://joont92.github.io/2017/09/23/test/hexo%EC%99%80-github-pages%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/"/>
    <id>https://joont92.github.io/2017/09/23/test/hexo와-github-pages로-블로그-만들기/</id>
    <published>2017-09-23T02:06:58.000Z</published>
    <updated>2017-10-28T14:32:15.768Z</updated>
    
    <content type="html"><![CDATA[<p>이번엔 앞서 작성한 github-pages에 블로그 서비스를 하기 위해 </p><p>정적 사이트 생성 도구인 hexo에 대해 알아보겠습니다.</p><p><br></p><h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><p>블로그 형태의 정적사이트를 생성하는데 사용되는 도구입니다.</p><p>hexo는 사용자가 작성한 포스트(markdown 등)을 읽어서, </p><p>정적파일 생성기를 통해 웹서버에 바로 서비스 할 수 있는 형태의 정적 웹사이트를 만들어냅니다.</p><p>대표적인 것으로 jekyll이 있지만 hexo가 좀 더 편해보이고 테마도 맘에 들어서 hexo를 사용하기로 했습니다 ㅎㅎ</p><p><br></p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><blockquote><p>사전준비 : Node.js,npm,git</p></blockquote><p>바로 설치하고 초기화 해보겠습니다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div><div class="line">hexo init <span class="string">'폴더명'</span></div></pre></td></tr></table></figure><p>‘폴더명’에 입력한 폴더를 만들고 그 폴더에 hexo 관련 파일을 초기화합니다.</p><p>(폴더를 지정하지 않으면 현재 폴더에 초기화하는데, 현재 폴더가 비어있는 상태여야 합니다.)</p><p>아래는 초기화 후 폴더 모습입니다!</p><p><img src="https://user-images.githubusercontent.com/18513953/30768882-f384f9ba-a049-11e7-8e1c-66bb64603b72.png" alt="image"></p><p>빨간색으로 표시해둔 <strong>_config.yml</strong>에서 블로그에 대한 대부분의 설정을 할 수 있습니다.<br><br><br><br></p><p>초기화가 완료되면 간단하게 로컬에서 테스트 해보도록 할까요</p><p>해당 폴더로 이동하여</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure><p>라고 입력하면, </p><blockquote><p>INFO  Start processing</p><p>INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>. Press Ctrl+C to stop.</p></blockquote><p>라는 메시지와 함께 <strong><a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></strong> 으로 접속 가능합니다.</p><p>기본 테마로 생성된 정적 블로그 페이지를 볼 수 있을 것입니다 ㅎㅎ</p><p><br></p><h2 id="테마-적용"><a href="#테마-적용" class="headerlink" title="테마 적용"></a>테마 적용</h2><p>하지만 이대로 사용할 순 없으니 테마를 한번 적용해보도록 하죠.</p><p>적용방법은 매우 간단합니다.</p><p><a href="https://hexo.io/themes/index.html" target="_blank" rel="external">https://hexo.io/themes/index.html</a></p><p>위의 주소에 접속한 뒤, 마음에 드는 테마를 고르시면 됩니다.</p><p>각 테마의 github 페이지에 들어가면 테마 적용 방법에 대한 상세한 설명이 있으니 별로 어려움 없으실 겁니다 ㅎㅎ</p><p>제가 고른 테마는 Material Flow 라는 테마입니다.</p><blockquote><p>gitgub : <a href="https://github.com/stkevintan/hexo-theme-material-flow" target="_blank" rel="external">https://github.com/stkevintan/hexo-theme-material-flow</a></p></blockquote><p>보시다시피 매우 간단합니다. 소스를 clone받고 _config.yml에서 해당 테마로 지정해주기만 하면 됩니다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attr">theme:</span> <span class="string">material-flow</span></div></pre></td></tr></table></figure><p>설정이 다 되었으면 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate <span class="comment"># 정적 리소스 생성</span></div></pre></td></tr></table></figure><p>와 같이 입력하여 정적 리소스를 생성해주면 됩니다.</p><p>간혹 제대로 되지 않는 경우도 있기 떄문에 clean도 한번 해줬습니다.</p><p>이제 다시 hexo server 입력 후 들어가보시면 테마가 잘 적용되어 있음을 보실 수 있습니다!</p><p><br></p><h2 id="글을-써보자"><a href="#글을-써보자" class="headerlink" title="글을 써보자"></a>글을 써보자</h2><p>블로그를 만들었으니 글을 써야겠네요.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo new post [post_name]</div><div class="line"><span class="comment"># ex) hexo new post 'first post'</span></div><div class="line"><span class="comment"># ex) hexo new post first-post</span></div></pre></td></tr></table></figure><p>과 같이 입력하면, <figure class="highlight plain"><figcaption><span>폴더에 아래와 같은 형태로 markdown 파일이 하나 생성됩니다.</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```md</div><div class="line">---</div><div class="line">title: first post</div><div class="line">date: 2017-09-23 10:51:08</div><div class="line">tags:</div><div class="line">---</div></pre></td></tr></table></figure></p><p>각종 폴더나 카테고리에 대한 설정도 <strong>_config.yml</strong>에서 할 수 있으니 각자 설정하시면 됩니다 ㅎㅎ</p><p><br><br><br></p><h2 id="배포"><a href="#배포" class="headerlink" title="배포"></a>배포</h2><p>이제 github에 배포해보도록 하겠습니다 ㅎㅎ</p><p>먼저 <strong>_config.yml</strong>에 deploy 관련 설정을 해 줍니다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Deployment</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attr">deploy:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">git</span></div><div class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/joont92/joont92.github.io.git</span></div><div class="line"><span class="attr">  branch:</span> <span class="string">master</span></div></pre></td></tr></table></figure><p>저장한 뒤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line"></div><div class="line">hexo generate <span class="comment"># 정적파일 생성하고</span></div><div class="line">hexo deploy <span class="comment"># 배포!</span></div><div class="line"></div><div class="line"><span class="comment"># hexo deploy --generate 로도 가능</span></div></pre></td></tr></table></figure><p>와 같이 해주면 끝입니다. 매우 간단하죠??</p><p><br></p><h4 id="배포시-아래와-같은-메시지와-함께-배포가-되지-않는-경우"><a href="#배포시-아래와-같은-메시지와-함께-배포가-되지-않는-경우" class="headerlink" title="배포시 아래와 같은 메시지와 함께 배포가 되지 않는 경우"></a>배포시 아래와 같은 메시지와 함께 배포가 되지 않는 경우</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ERROR Deployer not found: git</div></pre></td></tr></table></figure><p><strong>hexo-deployer-git</strong> 플러그인을 설치해주면 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deloyer-git --save</div></pre></td></tr></table></figure><p><br></p><p>여기까지입니다 ㅎㅎ</p><p>블로그에 markdown을 사용할 수 있고, git의 형상관리를 블로그에 사용할 수 있다니 매우 좋은것 같네요.</p><p>들려주셔서 감사합니다~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;이번엔 앞서 작성한 github-pages에 블로그 서비스를 하기 위해 &lt;/p&gt;
&lt;p&gt;정적 사이트 생성 도구인 hexo에 대해 알아보겠습니다.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;head
      
    
    </summary>
    
      <category term="test" scheme="https://joont92.github.io/categories/test/"/>
    
    
  </entry>
  
  <entry>
    <title>first post</title>
    <link href="https://joont92.github.io/2017/09/23/test/first-post/"/>
    <id>https://joont92.github.io/2017/09/23/test/first-post/</id>
    <published>2017-09-23T01:51:08.000Z</published>
    <updated>2017-10-28T13:27:48.013Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="test" scheme="https://joont92.github.io/categories/test/"/>
    
    
  </entry>
  
</feed>
